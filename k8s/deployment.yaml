apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: admin123

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: postgres

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: appflask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: appflask
  template:
    metadata:
      labels:
        app: appflask # mesmo do matchLabels acima
    spec:
      containers:
      - name: appflask
        image: ronafreitasweb/appflask:v7
        ports:
          - containerPort: 5000
        env:
          - name: DATABASE_NAME
            value: postgresdb
          - name: DATABASE_HOST
            value: postgres #service name  
          - name: DATABASE_PORT
            value: "5432"
          - name: DATABASE_USER
            value: postgresadmin
          - name: DATABASE_PWD
            value: admin123

---

# Service da aplicação web
apiVersion: v1
kind: Service
metadata:
  name: appflask
spec:
  selector:
    app: appflask # template:  metadata:  labels:
  ports:
  - port: 80
    targetPort: 5000 # explicação no video em 02:29:00
    nodePort: 30000 # explicação a partir de 01:51:00
  type: NodePort # NodePort - LoadBalancer


# k3d cluster create --agents 3 --servers 3 -p "8080:30000@loadbalancer" meucluster